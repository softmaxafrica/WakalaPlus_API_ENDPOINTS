// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WakalaPlus.Shared;

#nullable disable

namespace WakalaPlus.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250121151102_CustomerDetailsAddition")]
    partial class CustomerDetailsAddition
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WakalaPlus.Models.Agent", b =>
                {
                    b.Property<string>("agentCode")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AGENT_CODE");

                    b.Property<string>("address")
                        .HasColumnType("longtext")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("agentFullName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_FULL_NAME");

                    b.Property<string>("agentPhone")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_PHONE");

                    b.Property<double?>("latitude")
                        .HasColumnType("double")
                        .HasColumnName("LATITUDE");

                    b.Property<double?>("longitude")
                        .HasColumnType("double")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("networksOperating")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NETWORKS_OPERATING");

                    b.Property<string>("nida")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("NIDA");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("regstrationStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("REGISTRATION_STATUS");

                    b.Property<string>("serviceGroupCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SERVICE_GROUP_CODE");

                    b.HasKey("agentCode");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("WakalaPlus.Models.Customer", b =>
                {
                    b.Property<string>("customerId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Nida")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("RegDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("customerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WakalaPlus.Models.CustomerTickets", b =>
                {
                    b.Property<string>("transactionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("agentCode")
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_CODE");

                    b.Property<double?>("agentLatitude")
                        .HasColumnType("double")
                        .HasColumnName("AGENT_LATITUDE");

                    b.Property<double?>("agentLongitude")
                        .HasColumnType("double")
                        .HasColumnName("AGENT_LONGITUDE");

                    b.Property<double?>("customerLatitude")
                        .HasColumnType("double")
                        .HasColumnName("CUSTOMER_LATITUDE");

                    b.Property<double?>("customerLongitude")
                        .HasColumnType("double")
                        .HasColumnName("CUSTOMER_LONGITUDE");

                    b.Property<string>("description")
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("network")
                        .HasColumnType("longtext")
                        .HasColumnName("NETWORK");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("serviceRequested")
                        .HasColumnType("longtext")
                        .HasColumnName("SERVICE_REQUESTED");

                    b.Property<DateTime>("ticketCreationDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("TICKET_CREATION_DATE_TIME");

                    b.Property<DateTime?>("ticketLastResponseDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("TICKET_LAST_RESPONSE_DATE_TIME");

                    b.Property<string>("ticketStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("TICKET_STATUS");

                    b.HasKey("transactionId");

                    b.ToTable("CustomerTickets");
                });

            modelBuilder.Entity("WakalaPlus.Models.DeviceDetails", b =>
                {
                    b.Property<string>("deviceId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DEVICE_ID");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("IDENTITY");

                    b.Property<string>("LastAction")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("LAST_ACTION");

                    b.Property<DateTime?>("LastConnectionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LAST_CONNECTION_DATE");

                    b.Property<string>("connectionId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CONNECTION_ID");

                    b.Property<DateTime?>("createdDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("CREATED_DATE");

                    b.HasKey("deviceId");

                    b.ToTable("DeviceDetails");
                });

            modelBuilder.Entity("WakalaPlus.Models.GeneralTranslations", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CODE");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("tableName")
                        .HasColumnType("longtext")
                        .HasColumnName("TABLE_NAME");

                    b.Property<string>("value")
                        .HasColumnType("longtext")
                        .HasColumnName("VALUE");

                    b.HasKey("code");

                    b.ToTable("GeneralTranslations");
                });

            modelBuilder.Entity("WakalaPlus.Models.NotificationMessages", b =>
                {
                    b.Property<string>("connectionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONNECTION_ID");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("MESSAGE");

                    b.Property<string>("receiverConnectionId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RECEIVER_CONNECTION_ID");

                    b.Property<string>("receiverIdentity")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("RECEIVER_IDENTITY");

                    b.Property<string>("senderIdentity")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SENDER_IDENTITY");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("STATUS");

                    b.HasKey("connectionId");

                    b.ToTable("NotificationMessages");
                });

            modelBuilder.Entity("WakalaPlus.Models.OnlineOfflineAgent", b =>
                {
                    b.Property<string>("transactionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("address")
                        .HasColumnType("longtext")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("agentCode")
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_CODE");

                    b.Property<string>("agentFullName")
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_FULL_NAME");

                    b.Property<string>("agentPhone")
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_PHONE");

                    b.Property<DateTime?>("lastUpdate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("LAST_UPDATE");

                    b.Property<double?>("latitude")
                        .HasColumnType("double")
                        .HasColumnName("LATITUDE");

                    b.Property<double?>("longitude")
                        .HasColumnType("double")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("networksOperating")
                        .HasColumnType("longtext")
                        .HasColumnName("NETWORKS_OPERATING");

                    b.Property<string>("serviceGroupCode")
                        .HasColumnType("longtext")
                        .HasColumnName("SERVICE_GROUP_CODE");

                    b.Property<string>("status")
                        .HasColumnType("longtext")
                        .HasColumnName("STATUS");

                    b.HasKey("transactionId");

                    b.ToTable("OnlineOfflineAgent");
                });

            modelBuilder.Entity("WakalaPlus.Models.Report", b =>
                {
                    b.Property<string>("transactionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("agentCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_CODE");

                    b.Property<string>("comments")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("COMMENTS");

                    b.Property<string>("customerPhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("CUSTOMER_PHONE_NUMBER");

                    b.Property<string>("serviceCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SERVICE_CODE");

                    b.HasKey("transactionId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("WakalaPlus.Models.Service", b =>
                {
                    b.Property<string>("serviceCode")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SERVICE_CODE");

                    b.Property<string>("serviceDescription")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SERVICE_DESCRIPTION");

                    b.Property<string>("serviceName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SERVICE_NAME");

                    b.Property<string>("serviceType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("SERVICE_TYPE");

                    b.HasKey("serviceCode");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("WakalaPlus.Models.ServiceProviders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("longtext")
                        .HasColumnName("CATEGORY");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext")
                        .HasColumnName("IMAGE_URL");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("ServiceProviders");
                });

            modelBuilder.Entity("WakalaPlus.Models.TicketDetails", b =>
                {
                    b.Property<string>("transactionId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TRANSACTION_ID");

                    b.Property<string>("agentCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("AGENT_CODE");

                    b.Property<DateTime>("ticketCreationDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("TICKET_CREATION_DATE_TIME");

                    b.Property<DateTime?>("ticketLastResponseDateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("TICKET_LAST_RESPONSE_DATE_TIME");

                    b.Property<string>("ticketRef")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("TICKET_REF");

                    b.Property<string>("ticketStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("TICKET_STATUS");

                    b.HasKey("transactionId");

                    b.ToTable("TicketDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
